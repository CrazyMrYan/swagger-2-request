name: Run Tests

on:
  push:
    branches:
      - main
      - master
      - develop
  pull_request:
    branches:
      - main
      - master
      - develop
  workflow_dispatch:

# 设置权限
permissions:
  contents: read
  checks: write
  pull-requests: write

# 并发控制
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Run linting
        run: pnpm run lint
      
      - name: Run type checking
        run: pnpm run typecheck || echo "Type check failed but continuing..."
      
      - name: Run unit tests
        run: pnpm run test:coverage
      
      - name: Upload coverage reports to Codecov
        if: matrix.node-version == 18
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
      
      - name: Comment PR with test results
        if: github.event_name == 'pull_request' && matrix.node-version == 18
        uses: dorny/test-reporter@v1
        with:
          name: Unit Test Results
          path: 'test-results.xml'
          reporter: jest-junit
          fail-on-error: true

  build:
    name: Build Check
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Build project
        run: pnpm run build
      
      - name: Test CLI functionality
        run: |
          cd examples
          node ../dist/cli.js init
          node ../dist/cli.js generate https://petstore.swagger.io/v2/swagger.json --force

  quality-gate:
    name: Quality Gate
    runs-on: ubuntu-latest
    needs: [test, build]
    if: always()
    
    steps:
      - name: Check test results
        run: |
          if [[ "${{ needs.test.result }}" != "success" ]]; then
            echo "Tests failed!"
            exit 1
          fi
          
          if [[ "${{ needs.build.result }}" != "success" ]]; then
            echo "Build failed!"
            exit 1
          fi
          
          echo "All checks passed! ✅"